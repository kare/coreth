name: CI
defaults:
  run:
    shell: bash
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
    inputs:
      avalanchegoRepo:
        description: 'avalanchego github repository'
        required: true
        default: 'ava-labs/avalanchego'
      avalanchegoBranch:
        description: 'avalanchego branch'
        required: true
        default: 'master'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - name: check out ${{ github.event.inputs.avalanchegoRepo }} ${{ github.event.inputs.avalanchegoBranch }}
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/checkout@v3.1.0
        with:
          repository: ${{ github.event.inputs.avalanchegoRepo }}
          ref: ${{ github.event.inputs.avalanchegoBranch }}
          path: avalanchego
          token: ${{ secrets.AVALANCHE_PAT }}
      - uses: actions/setup-go@v3.3.0
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true
      - name: change avalanchego dep
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          go mod edit -replace github.com/ava-labs/avalanchego=./avalanchego
          go mod tidy
          go clean -modcache # avoid conflicts with the golangci-lint-action cache
      - run: ./scripts/lint_allowed_geth_imports.sh
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3.2.0
        with:
          version: v1.47
          working-directory: .
          args: --timeout 3m
      - name: Check source is Go fmted
        run: diff -u <(gofmt -d ./) <(echo -n)
      - name: Check source is Go fmt simplified
        run: diff -u <(gofmt -s -d ./) <(echo -n)
      - name: Check running go mod tidy doesn't generate changes
        run: diff -u <(go mod tidy -v) <(echo -n)
      - name: Check running go generate doesn't generate changes
        run: diff -u <(go generate) <(git diff)
  test:
    name: Golang Unit Tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - name: check out ${{ github.event.inputs.avalanchegoRepo }} ${{ github.event.inputs.avalanchegoBranch }}
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/checkout@v3.1.0
        with:
          repository: ${{ github.event.inputs.avalanchegoRepo }}
          ref: ${{ github.event.inputs.avalanchegoBranch }}
          path: avalanchego
          token: ${{ secrets.AVALANCHE_PAT }}
      - uses: actions/setup-go@v3.3.0
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true
      - name: change avalanchego dep
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          go mod edit -replace github.com/ava-labs/avalanchego=./avalanchego
          go mod tidy
      - run: go mod download
      - run: ./scripts/build.sh evm
      - run: ./scripts/build_test.sh
      - run: ./scripts/coverage.sh
  test-race:
    name: Golang Unit Tests Race Detection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - name: check out ${{ github.event.inputs.avalanchegoRepo }} ${{ github.event.inputs.avalanchegoBranch }}
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/checkout@v3.1.0
        with:
          repository: ${{ github.event.inputs.avalanchegoRepo }}
          ref: ${{ github.event.inputs.avalanchegoBranch }}
          path: avalanchego
          token: ${{ secrets.AVALANCHE_PAT }}
      - uses: actions/setup-go@v3.3.0
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true
      - name: change avalanchego dep
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          go mod edit -replace github.com/ava-labs/avalanchego=./avalanchego
          go mod tidy
      - run: go mod download
      - run: ./scripts/build.sh evm
      - run: ./scripts/build_test.sh -race
  e2e:
    name: Golang E2E Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - name: check out ${{ github.event.inputs.avalanchegoRepo }} ${{ github.event.inputs.avalanchegoBranch }}
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/checkout@v3.1.0
        with:
          repository: ${{ github.event.inputs.avalanchegoRepo }}
          ref: ${{ github.event.inputs.avalanchegoBranch }}
          path: avalanchego
          token: ${{ secrets.AVALANCHE_PAT }}
      - uses: actions/setup-go@v3.3.0
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true
      - name: change avalanchego dep
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          go mod edit -replace github.com/ava-labs/avalanchego=./avalanchego
          go mod tidy
      - name: prepare avalanchego directory for docker copy
        if: ${{ github.event_name == 'workflow_dispatch' }}
        # mv avalanchego/ to nested dir avalanchego/avalanchego/
        # required because docker instruction "COPY dir ." copies dir/* to .
        run: mkdir avalanchego_tmp && mv avalanchego avalanchego_tmp && mv avalanchego_tmp avalanchego
      - run: .github/workflows/run_e2e_tests.sh --parallelism 1 --client-id $KURTOSIS_CLIENT_ID --client-secret $KURTOSIS_CLIENT_SECRET
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
          KURTOSIS_CLIENT_ID: ${{ secrets.KURTOSIS_CLIENT_ID }}
          KURTOSIS_CLIENT_SECRET: ${{ secrets.KURTOSIS_CLIENT_SECRET }}
